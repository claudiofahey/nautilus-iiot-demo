syntax = "proto3";

option java_multiple_files = true;
option java_package = "io.pravega.example.pravega_gateway";

service PravegaGateway {
  rpc CreateScope(CreateScopeRequest) returns (CreateScopeResponse) {}
  rpc CreateStream(CreateStreamRequest) returns (CreateStreamResponse) {}
  rpc ReadEvents(ReadEventsRequest) returns (stream ReadEventsResponse) {}
  rpc WriteEvents(stream WriteEventsRequest) returns (WriteEventsResponse) {}
}

message CreateScopeRequest {
  string scope = 1;
}

message CreateScopeResponse {
  bool created = 1;
}

message CreateStreamRequest {
  string scope = 1;
  string stream = 2;
  // TODO: scaling policy, etc.
}

message CreateStreamResponse {
  bool created = 1;
}

message ReadEventsRequest {
  string scope = 1;
  string stream = 2;
  int64 timeout_ms = 3;
}

message ReadEventsResponse {
  bytes event = 1;
  string position = 2;
  string event_pointer = 3;
  // Empty string if this is not a checkpoint.
  string checkpoint_name = 4;
}

// scope, stream, and use_transaction must be the same for all requests in the WriteEvents call.
message WriteEventsRequest {
  // The event to write. Events must be 1 MiB or less.
  bytes event = 1;
  // Optional.
  string routing_key = 2;
  // Must be set in the first request. For subsequent requests, must be the same value or the default (empty).
  string scope = 3;
  // Must be set in the first request. For subsequent requests, must be the same value or the default (empty).
  string stream = 4;
  // If true, all events will be written in a transaction and the transaction will be committed when the request
  // is completed.
  // If false, all events will be written without a transaction and the writer will be closed when the request
  // is completed.
  // Can be set in the first request. For subsequent requests, must be the same value or the default (false).
  bool use_transaction = 5;
  // If true, the open transaction will be flushed and committed after writing this event.
  // A new transaction will be opened.
  // This is ignored if use_transaction is false.
  bool commit = 6;
}

message WriteEventsResponse {
}
